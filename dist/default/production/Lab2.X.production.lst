

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Nov 03 17:30:59 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,space=0,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0004                     fsr             equ	4
    54     0004                     fsr0            equ	4
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0002                     pc              equ	2
    58     0002                     pcl             equ	2
    59     000A                     pclath          equ	10
    60     0003                     status          equ	3
    61     0000                     INDF            equ	0	;# 
    62     0001                     TMR0            equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR             equ	4	;# 
    66     0005                     PORTA           equ	5	;# 
    67     0006                     PORTB           equ	6	;# 
    68     0007                     PORTC           equ	7	;# 
    69     0008                     PORTD           equ	8	;# 
    70     0009                     PORTE           equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PIR1            equ	12	;# 
    74     000D                     PIR2            equ	13	;# 
    75     000E                     TMR1            equ	14	;# 
    76     000E                     TMR1L           equ	14	;# 
    77     000F                     TMR1H           equ	15	;# 
    78     0010                     T1CON           equ	16	;# 
    79     0011                     TMR2            equ	17	;# 
    80     0012                     T2CON           equ	18	;# 
    81     0013                     SSPBUF          equ	19	;# 
    82     0014                     SSPCON          equ	20	;# 
    83     0015                     CCPR1           equ	21	;# 
    84     0015                     CCPR1L          equ	21	;# 
    85     0016                     CCPR1H          equ	22	;# 
    86     0017                     CCP1CON         equ	23	;# 
    87     0018                     RCSTA           equ	24	;# 
    88     0019                     TXREG           equ	25	;# 
    89     001A                     RCREG           equ	26	;# 
    90     001B                     CCPR2           equ	27	;# 
    91     001B                     CCPR2L          equ	27	;# 
    92     001C                     CCPR2H          equ	28	;# 
    93     001D                     CCP2CON         equ	29	;# 
    94     001E                     ADRESH          equ	30	;# 
    95     001F                     ADCON0          equ	31	;# 
    96     0081                     OPTION_REG      equ	129	;# 
    97     0085                     TRISA           equ	133	;# 
    98     0086                     TRISB           equ	134	;# 
    99     0087                     TRISC           equ	135	;# 
   100     0088                     TRISD           equ	136	;# 
   101     0089                     TRISE           equ	137	;# 
   102     008C                     PIE1            equ	140	;# 
   103     008D                     PIE2            equ	141	;# 
   104     008E                     PCON            equ	142	;# 
   105     0091                     SSPCON2         equ	145	;# 
   106     0092                     PR2             equ	146	;# 
   107     0093                     SSPADD          equ	147	;# 
   108     0094                     SSPSTAT         equ	148	;# 
   109     0098                     TXSTA           equ	152	;# 
   110     0099                     SPBRG           equ	153	;# 
   111     009C                     CMCON           equ	156	;# 
   112     009D                     CVRCON          equ	157	;# 
   113     009E                     ADRESL          equ	158	;# 
   114     009F                     ADCON1          equ	159	;# 
   115     010C                     EEDATA          equ	268	;# 
   116     010D                     EEADR           equ	269	;# 
   117     010E                     EEDATH          equ	270	;# 
   118     010F                     EEADRH          equ	271	;# 
   119     018C                     EECON1          equ	396	;# 
   120     018D                     EECON2          equ	397	;# 
   121     0000                     INDF            equ	0	;# 
   122     0001                     TMR0            equ	1	;# 
   123     0002                     PCL             equ	2	;# 
   124     0003                     STATUS          equ	3	;# 
   125     0004                     FSR             equ	4	;# 
   126     0005                     PORTA           equ	5	;# 
   127     0006                     PORTB           equ	6	;# 
   128     0007                     PORTC           equ	7	;# 
   129     0008                     PORTD           equ	8	;# 
   130     0009                     PORTE           equ	9	;# 
   131     000A                     PCLATH          equ	10	;# 
   132     000B                     INTCON          equ	11	;# 
   133     000C                     PIR1            equ	12	;# 
   134     000D                     PIR2            equ	13	;# 
   135     000E                     TMR1            equ	14	;# 
   136     000E                     TMR1L           equ	14	;# 
   137     000F                     TMR1H           equ	15	;# 
   138     0010                     T1CON           equ	16	;# 
   139     0011                     TMR2            equ	17	;# 
   140     0012                     T2CON           equ	18	;# 
   141     0013                     SSPBUF          equ	19	;# 
   142     0014                     SSPCON          equ	20	;# 
   143     0015                     CCPR1           equ	21	;# 
   144     0015                     CCPR1L          equ	21	;# 
   145     0016                     CCPR1H          equ	22	;# 
   146     0017                     CCP1CON         equ	23	;# 
   147     0018                     RCSTA           equ	24	;# 
   148     0019                     TXREG           equ	25	;# 
   149     001A                     RCREG           equ	26	;# 
   150     001B                     CCPR2           equ	27	;# 
   151     001B                     CCPR2L          equ	27	;# 
   152     001C                     CCPR2H          equ	28	;# 
   153     001D                     CCP2CON         equ	29	;# 
   154     001E                     ADRESH          equ	30	;# 
   155     001F                     ADCON0          equ	31	;# 
   156     0081                     OPTION_REG      equ	129	;# 
   157     0085                     TRISA           equ	133	;# 
   158     0086                     TRISB           equ	134	;# 
   159     0087                     TRISC           equ	135	;# 
   160     0088                     TRISD           equ	136	;# 
   161     0089                     TRISE           equ	137	;# 
   162     008C                     PIE1            equ	140	;# 
   163     008D                     PIE2            equ	141	;# 
   164     008E                     PCON            equ	142	;# 
   165     0091                     SSPCON2         equ	145	;# 
   166     0092                     PR2             equ	146	;# 
   167     0093                     SSPADD          equ	147	;# 
   168     0094                     SSPSTAT         equ	148	;# 
   169     0098                     TXSTA           equ	152	;# 
   170     0099                     SPBRG           equ	153	;# 
   171     009C                     CMCON           equ	156	;# 
   172     009D                     CVRCON          equ	157	;# 
   173     009E                     ADRESL          equ	158	;# 
   174     009F                     ADCON1          equ	159	;# 
   175     010C                     EEDATA          equ	268	;# 
   176     010D                     EEADR           equ	269	;# 
   177     010E                     EEDATH          equ	270	;# 
   178     010F                     EEADRH          equ	271	;# 
   179     018C                     EECON1          equ	396	;# 
   180     018D                     EECON2          equ	397	;# 
   181     0001                     _TMR0           set	1
   182     000B                     _INTCONbits     set	11
   183     0006                     _PORTBbits      set	6
   184     0006                     _PORTB          set	6
   185     0029                     _RA1            set	41
   186     0039                     _RC1            set	57
   187     002C                     _RA4            set	44
   188     0028                     _RA0            set	40
   189     0038                     _RC0            set	56
   190     0081                     _OPTION_REG     set	129
   191     0085                     _TRISAbits      set	133
   192     0087                     _TRISCbits      set	135
   193     0085                     _TRISA          set	133
   194     0086                     _TRISB          set	134
   195                           
   196                           	psect	strings
   197     019F                     __pstrings:
   198     019F                     stringtab:
   199     019F                     __stringtab:
   200     019F                     stringcode:	
   201                           ;	String table - string pointers are 1 byte each
   202                           
   203     019F                     stringdir:
   204     019F  3001               	movlw	high stringdir
   205     01A0  008A               	movwf	10
   206     01A1  0804               	movf	4,w
   207     01A2  0A84               	incf	4,f
   208     01A3  0782               	addwf	2,f
   209     01A4                     __stringbase:
   210     01A4  3400               	retlw	0
   211     01A5                     __end_of__stringtab:
   212     01A5                     STR_6:
   213     01A5  344D               	retlw	77	;'M'
   214     01A6  3461               	retlw	97	;'a'
   215     01A7  3472               	retlw	114	;'r'
   216     01A8  3469               	retlw	105	;'i'
   217     01A9  3465               	retlw	101	;'e'
   218     01AA  3420               	retlw	32	;' '
   219     01AB  344E               	retlw	78	;'N'
   220     01AC  344F               	retlw	79	;'O'
   221     01AD  344E               	retlw	78	;'N'
   222     01AE  3400               	retlw	0
   223     01AF                     STR_4:
   224     01AF  344D               	retlw	77	;'M'
   225     01B0  3461               	retlw	97	;'a'
   226     01B1  3472               	retlw	114	;'r'
   227     01B2  3469               	retlw	105	;'i'
   228     01B3  3465               	retlw	101	;'e'
   229     01B4  3420               	retlw	32	;' '
   230     01B5  344F               	retlw	79	;'O'
   231     01B6  344B               	retlw	75	;'K'
   232     01B7  3400               	retlw	0
   233     01B8                     STR_3:
   234     01B8  344A               	retlw	74	;'J'
   235     01B9  346F               	retlw	111	;'o'
   236     01BA  3473               	retlw	115	;'s'
   237     01BB  3465               	retlw	101	;'e'
   238     01BC  3420               	retlw	32	;' '
   239     01BD  344E               	retlw	78	;'N'
   240     01BE  344F               	retlw	79	;'O'
   241     01BF  344E               	retlw	78	;'N'
   242     01C0  3400               	retlw	0
   243     01C1                     STR_1:
   244     01C1  344A               	retlw	74	;'J'
   245     01C2  346F               	retlw	111	;'o'
   246     01C3  3473               	retlw	115	;'s'
   247     01C4  3465               	retlw	101	;'e'
   248     01C5  3420               	retlw	32	;' '
   249     01C6  344F               	retlw	79	;'O'
   250     01C7  344B               	retlw	75	;'K'
   251     01C8  3400               	retlw	0
   252     01C1                     STR_2           equ	STR_1
   253     01AF                     STR_5           equ	STR_4
   254                           
   255                           	psect	cinit
   256     000F                     start_initialization:	
   257                           ; #config settings
   258                           
   259     000F                     __initialization:
   260                           
   261                           ; Clear objects allocated to BANK0
   262     000F  1283               	bcf	3,5	;RP0=0, select bank0
   263     0010  1303               	bcf	3,6	;RP1=0, select bank0
   264     0011  01A0               	clrf	__pbssBANK0& (0+127)
   265     0012  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   266     0013  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   267     0014  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   268     0015  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   269     0016  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   270     0017  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   271     0018  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   272     0019  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   273     001A  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   274     001B  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   275     001C  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   276     001D  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   277     001E  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   278     001F                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281     001F                     __end_of__initialization:
   282     001F  0183               	clrf	3
   283     0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssBANK0
   286     0020                     __pbssBANK0:
   287     0020                     _countString2:
   288     0020                     	ds	5
   289     0025                     _countString:
   290     0025                     	ds	5
   291     002A                     _timer_count1:
   292     002A                     	ds	2
   293     002C                     _timer_count:
   294     002C                     	ds	2
   295                           
   296                           	psect	cstackCOMMON
   297     0070                     __pcstackCOMMON:
   298     0070                     ?_lcd_cmd:
   299     0070                     ?_lcd_data:	
   300                           ; 1 bytes @ 0x0
   301                           
   302     0070                     ?_lcd_init:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_timer_0:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ??_timer_0:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 1 bytes @ 0x0
   316     0070                     	ds	2
   317     0072                     ??_lcd_cmd:
   318     0072                     ??_lcd_data:	
   319                           ; 1 bytes @ 0x2
   320                           
   321                           
   322                           ; 1 bytes @ 0x2
   323     0072                     	ds	2
   324     0074                     lcd_cmd@cmd:
   325     0074                     lcd_data@data:	
   326                           ; 1 bytes @ 0x4
   327                           
   328                           
   329                           ; 1 bytes @ 0x4
   330     0074                     	ds	1
   331     0075                     ?_lcd_string:
   332     0075                     lcd_string@str:	
   333                           ; 1 bytes @ 0x5
   334                           
   335     0075                     ??_lcd_init:	
   336                           ; 1 bytes @ 0x5
   337                           
   338                           
   339                           ; 1 bytes @ 0x5
   340     0075                     	ds	1
   341     0076                     lcd_string@num:
   342                           
   343                           ; 1 bytes @ 0x6
   344     0076                     	ds	1
   345     0077                     lcd_string@i:
   346     0077                     ??_lcd_string:	
   347                           ; 1 bytes @ 0x7
   348                           
   349                           
   350                           ; 1 bytes @ 0x7
   351     0077                     	ds	1
   352     0078                     ??_main:
   353                           
   354                           ; 1 bytes @ 0x8
   355     0078                     	ds	3
   356                           
   357                           	psect	cstackBANK0
   358     002E                     __pcstackBANK0:
   359     002E                     main@jose:
   360                           
   361                           ; 1 bytes @ 0x0
   362     002E                     	ds	1
   363     002F                     main@marie:
   364                           
   365                           ; 1 bytes @ 0x1
   366     002F                     	ds	1
   367                           
   368                           	psect	maintext
   369     0023                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 79 in file "newmain.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  marie           1    1[BANK0 ] unsigned char 
   380 ;;  jose            1    0[BANK0 ] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       2       0       0       0
   392 ;;      Temps:          3       0       0       0       0
   393 ;;      Totals:         3       2       0       0       0
   394 ;;Total ram usage:        5 bytes
   395 ;; Hardware stack levels required when called: 3
   396 ;; This function calls:
   397 ;;		_lcd_cmd
   398 ;;		_lcd_init
   399 ;;		_lcd_string
   400 ;; This function is called by:
   401 ;;		Startup code after reset
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405     0023                     _main:	
   406                           ;psect for function _main
   407                           
   408     0023                     l925:	
   409                           ;incstack = 0
   410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   411                           
   412                           
   413                           ;newmain.c: 81: TRISB = 0x00;
   414     0023  1683               	bsf	3,5	;RP0=1, select bank1
   415     0024  1303               	bcf	3,6	;RP1=0, select bank1
   416     0025  0186               	clrf	6	;volatile
   417                           
   418                           ;newmain.c: 82: TRISA = 0x00;
   419     0026  0185               	clrf	5	;volatile
   420     0027                     l927:
   421                           
   422                           ;newmain.c: 83: TRISCbits.TRISC0 = 1;
   423     0027  1407               	bsf	7,0	;volatile
   424     0028                     l929:
   425                           
   426                           ;newmain.c: 84: TRISCbits.TRISC1 = 1;
   427     0028  1487               	bsf	7,1	;volatile
   428     0029                     l931:
   429                           
   430                           ;newmain.c: 85: TRISAbits.TRISA0 = 0;
   431     0029  1005               	bcf	5,0	;volatile
   432     002A                     l933:
   433                           
   434                           ;newmain.c: 86: TRISAbits.TRISA1 = 0;
   435     002A  1085               	bcf	5,1	;volatile
   436     002B                     l935:
   437                           
   438                           ;newmain.c: 87: TRISAbits.TRISA4 = 0;
   439     002B  1205               	bcf	5,4	;volatile
   440     002C                     l937:
   441                           
   442                           ;newmain.c: 90: INTCONbits.GIE = 1;
   443     002C  178B               	bsf	11,7	;volatile
   444     002D                     l939:
   445                           
   446                           ;newmain.c: 91: INTCONbits.PEIE = 1;
   447     002D  170B               	bsf	11,6	;volatile
   448     002E                     l941:
   449                           
   450                           ;newmain.c: 92: INTCONbits.TMR0IE = 1;
   451     002E  168B               	bsf	11,5	;volatile
   452     002F                     l943:
   453                           
   454                           ;newmain.c: 93: OPTION_REG = 0x07;
   455     002F  3007               	movlw	7
   456     0030  0081               	movwf	1	;volatile
   457     0031                     l945:
   458                           
   459                           ;newmain.c: 94: TMR0 = 59;
   460     0031  303B               	movlw	59
   461     0032  1283               	bcf	3,5	;RP0=0, select bank0
   462     0033  1303               	bcf	3,6	;RP1=0, select bank0
   463     0034  0081               	movwf	1	;volatile
   464     0035                     l947:
   465                           
   466                           ;newmain.c: 96: lcd_init();
   467     0035  120A  118A  21C9  120A  118A  	fcall	_lcd_init
   468     003A                     l949:
   469                           
   470                           ;newmain.c: 97: unsigned char jose = 0;
   471     003A  1283               	bcf	3,5	;RP0=0, select bank0
   472     003B  1303               	bcf	3,6	;RP1=0, select bank0
   473     003C  01AE               	clrf	main@jose
   474     003D                     l951:
   475                           
   476                           ;newmain.c: 98: unsigned char marie = 0;
   477     003D  01AF               	clrf	main@marie
   478     003E                     l953:
   479                           
   480                           ;newmain.c: 102: if (RC0 == 1) {
   481     003E  1C07               	btfss	7,0	;volatile
   482     003F  2841               	goto	u231
   483     0040  2842               	goto	u230
   484     0041                     u231:
   485     0041  286B               	goto	l969
   486     0042                     u230:
   487     0042                     l955:
   488                           
   489                           ;newmain.c: 103: _delay((unsigned long)((50)*(20000000/4000.0)));
   490     0042  3002               	movlw	2
   491     0043  00FA               	movwf	??_main+2
   492     0044  3045               	movlw	69
   493     0045  00F9               	movwf	??_main+1
   494     0046  30A9               	movlw	169
   495     0047  00F8               	movwf	??_main
   496     0048                     u377:
   497     0048  0BF8               	decfsz	??_main,f
   498     0049  2848               	goto	u377
   499     004A  0BF9               	decfsz	??_main+1,f
   500     004B  2848               	goto	u377
   501     004C  0BFA               	decfsz	??_main+2,f
   502     004D  2848               	goto	u377
   503     004E  284F               	nop2
   504     004F                     l957:
   505                           
   506                           ;newmain.c: 104: if (RC0 == 1) {
   507     004F  1283               	bcf	3,5	;RP0=0, select bank0
   508     0050  1303               	bcf	3,6	;RP1=0, select bank0
   509     0051  1C07               	btfss	7,0	;volatile
   510     0052  2854               	goto	u241
   511     0053  2855               	goto	u240
   512     0054                     u241:
   513     0054  286B               	goto	l969
   514     0055                     u240:
   515     0055                     l959:
   516                           
   517                           ;newmain.c: 105: timer_count = 0;
   518     0055  01AC               	clrf	_timer_count
   519     0056  01AD               	clrf	_timer_count+1
   520                           
   521                           ;newmain.c: 106: jose = 0;
   522     0057  01AE               	clrf	main@jose
   523     0058                     l961:
   524                           
   525                           ;newmain.c: 107: lcd_cmd(0x80);
   526     0058  3080               	movlw	128
   527     0059  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
   528     005E                     l963:
   529                           
   530                           ;newmain.c: 108: lcd_string("Jose OK", 8);
   531     005E  301D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   532     005F  00F5               	movwf	lcd_string@str
   533     0060  3008               	movlw	8
   534     0061  00F6               	movwf	lcd_string@num
   535     0062  120A  118A  2204  120A  118A  	fcall	_lcd_string
   536     0067                     l965:
   537                           
   538                           ;newmain.c: 109: RA0 = 0;
   539     0067  1283               	bcf	3,5	;RP0=0, select bank0
   540     0068  1303               	bcf	3,6	;RP1=0, select bank0
   541     0069  1005               	bcf	5,0	;volatile
   542     006A                     l967:
   543                           
   544                           ;newmain.c: 110: RA4 = 0;
   545     006A  1205               	bcf	5,4	;volatile
   546     006B                     l969:
   547                           
   548                           ;newmain.c: 111: };newmain.c: 112: };newmain.c: 114: if (timer_count < 500 && !jose) {
   549     006B  3001               	movlw	1
   550     006C  022D               	subwf	_timer_count+1,w
   551     006D  30F4               	movlw	244
   552     006E  1903               	skipnz
   553     006F  022C               	subwf	_timer_count,w
   554     0070  1803               	skipnc
   555     0071  2873               	goto	u251
   556     0072  2874               	goto	u250
   557     0073                     u251:
   558     0073  289A               	goto	l985
   559     0074                     u250:
   560     0074                     l971:
   561     0074  082E               	movf	main@jose,w
   562     0075  1D03               	btfss	3,2
   563     0076  2878               	goto	u261
   564     0077  2879               	goto	u260
   565     0078                     u261:
   566     0078  289A               	goto	l985
   567     0079                     u260:
   568     0079                     l973:
   569                           
   570                           ;newmain.c: 115: lcd_cmd(0x80);
   571     0079  3080               	movlw	128
   572     007A  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
   573     007F                     l975:
   574                           
   575                           ;newmain.c: 116: lcd_string("Jose OK", 8);
   576     007F  301D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   577     0080  00F5               	movwf	lcd_string@str
   578     0081  3008               	movlw	8
   579     0082  00F6               	movwf	lcd_string@num
   580     0083  120A  118A  2204  120A  118A  	fcall	_lcd_string
   581     0088                     l977:
   582                           
   583                           ;newmain.c: 117: jose = 1;
   584     0088  3001               	movlw	1
   585     0089  1283               	bcf	3,5	;RP0=0, select bank0
   586     008A  1303               	bcf	3,6	;RP1=0, select bank0
   587     008B  00AE               	movwf	main@jose
   588     008C                     l979:
   589                           
   590                           ;newmain.c: 118: RA0 = 0;
   591     008C  1005               	bcf	5,0	;volatile
   592     008D                     l981:
   593                           
   594                           ;newmain.c: 119: if (timer_count1 < 500) {
   595     008D  3001               	movlw	1
   596     008E  022B               	subwf	_timer_count1+1,w
   597     008F  30F4               	movlw	244
   598     0090  1903               	skipnz
   599     0091  022A               	subwf	_timer_count1,w
   600     0092  1803               	skipnc
   601     0093  2895               	goto	u271
   602     0094  2896               	goto	u270
   603     0095                     u271:
   604     0095  2898               	goto	l68
   605     0096                     u270:
   606     0096                     l983:
   607                           
   608                           ;newmain.c: 120: RA4 = 0;
   609     0096  1205               	bcf	5,4	;volatile
   610                           
   611                           ;newmain.c: 121: }
   612     0097  28BC               	goto	l999
   613     0098                     l68:
   614                           
   615                           ;newmain.c: 122: else {;newmain.c: 123: RA4 = 1;
   616     0098  1605               	bsf	5,4	;volatile
   617     0099  28BC               	goto	l999
   618     009A                     l985:
   619     009A  3001               	movlw	1
   620     009B  022D               	subwf	_timer_count+1,w
   621     009C  30F4               	movlw	244
   622     009D  1903               	skipnz
   623     009E  022C               	subwf	_timer_count,w
   624     009F  1C03               	skipc
   625     00A0  28A2               	goto	u281
   626     00A1  28A3               	goto	u280
   627     00A2                     u281:
   628     00A2  28BC               	goto	l999
   629     00A3                     u280:
   630     00A3                     l987:
   631     00A3  082E               	movf	main@jose,w
   632     00A4  1903               	btfsc	3,2
   633     00A5  28A7               	goto	u291
   634     00A6  28A8               	goto	u290
   635     00A7                     u291:
   636     00A7  28BC               	goto	l999
   637     00A8                     u290:
   638     00A8                     l989:
   639                           
   640                           ;newmain.c: 126: lcd_cmd(0x80);
   641     00A8  3080               	movlw	128
   642     00A9  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
   643     00AE                     l991:
   644                           
   645                           ;newmain.c: 127: lcd_string("Jose NON", 8);
   646     00AE  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   647     00AF  00F5               	movwf	lcd_string@str
   648     00B0  3008               	movlw	8
   649     00B1  00F6               	movwf	lcd_string@num
   650     00B2  120A  118A  2204  120A  118A  	fcall	_lcd_string
   651     00B7                     l993:
   652                           
   653                           ;newmain.c: 128: jose = 0;
   654     00B7  1283               	bcf	3,5	;RP0=0, select bank0
   655     00B8  1303               	bcf	3,6	;RP1=0, select bank0
   656     00B9  01AE               	clrf	main@jose
   657     00BA                     l995:
   658                           
   659                           ;newmain.c: 129: RA0 = 1;
   660     00BA  1405               	bsf	5,0	;volatile
   661     00BB  2898               	goto	l68
   662     00BC                     l999:
   663                           
   664                           ;newmain.c: 131: };newmain.c: 134: if (RC1 == 1) {
   665     00BC  1C87               	btfss	7,1	;volatile
   666     00BD  28BF               	goto	u301
   667     00BE  28C0               	goto	u300
   668     00BF                     u301:
   669     00BF  28E9               	goto	l1015
   670     00C0                     u300:
   671     00C0                     l1001:
   672                           
   673                           ;newmain.c: 135: _delay((unsigned long)((50)*(20000000/4000.0)));
   674     00C0  3002               	movlw	2
   675     00C1  00FA               	movwf	??_main+2
   676     00C2  3045               	movlw	69
   677     00C3  00F9               	movwf	??_main+1
   678     00C4  30A9               	movlw	169
   679     00C5  00F8               	movwf	??_main
   680     00C6                     u387:
   681     00C6  0BF8               	decfsz	??_main,f
   682     00C7  28C6               	goto	u387
   683     00C8  0BF9               	decfsz	??_main+1,f
   684     00C9  28C6               	goto	u387
   685     00CA  0BFA               	decfsz	??_main+2,f
   686     00CB  28C6               	goto	u387
   687     00CC  28CD               	nop2
   688     00CD                     l1003:
   689                           
   690                           ;newmain.c: 136: if (RC1 == 1) {
   691     00CD  1283               	bcf	3,5	;RP0=0, select bank0
   692     00CE  1303               	bcf	3,6	;RP1=0, select bank0
   693     00CF  1C87               	btfss	7,1	;volatile
   694     00D0  28D2               	goto	u311
   695     00D1  28D3               	goto	u310
   696     00D2                     u311:
   697     00D2  28E9               	goto	l1015
   698     00D3                     u310:
   699     00D3                     l1005:
   700                           
   701                           ;newmain.c: 137: timer_count1 = 0;
   702     00D3  01AA               	clrf	_timer_count1
   703     00D4  01AB               	clrf	_timer_count1+1
   704                           
   705                           ;newmain.c: 138: marie = 0;
   706     00D5  01AF               	clrf	main@marie
   707     00D6                     l1007:
   708                           
   709                           ;newmain.c: 139: lcd_cmd(0xC0);
   710     00D6  30C0               	movlw	192
   711     00D7  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
   712     00DC                     l1009:
   713                           
   714                           ;newmain.c: 140: lcd_string("Marie OK", 9);
   715     00DC  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   716     00DD  00F5               	movwf	lcd_string@str
   717     00DE  3009               	movlw	9
   718     00DF  00F6               	movwf	lcd_string@num
   719     00E0  120A  118A  2204  120A  118A  	fcall	_lcd_string
   720     00E5                     l1011:
   721                           
   722                           ;newmain.c: 141: RA1 = 0;
   723     00E5  1283               	bcf	3,5	;RP0=0, select bank0
   724     00E6  1303               	bcf	3,6	;RP1=0, select bank0
   725     00E7  1085               	bcf	5,1	;volatile
   726     00E8                     l1013:
   727                           
   728                           ;newmain.c: 142: RA4 = 0;
   729     00E8  1205               	bcf	5,4	;volatile
   730     00E9                     l1015:
   731                           
   732                           ;newmain.c: 143: };newmain.c: 144: };newmain.c: 146: if (timer_count1 < 500 && !marie) {
   733     00E9  3001               	movlw	1
   734     00EA  022B               	subwf	_timer_count1+1,w
   735     00EB  30F4               	movlw	244
   736     00EC  1903               	skipnz
   737     00ED  022A               	subwf	_timer_count1,w
   738     00EE  1803               	skipnc
   739     00EF  28F1               	goto	u321
   740     00F0  28F2               	goto	u320
   741     00F1                     u321:
   742     00F1  2918               	goto	l1031
   743     00F2                     u320:
   744     00F2                     l1017:
   745     00F2  082F               	movf	main@marie,w
   746     00F3  1D03               	btfss	3,2
   747     00F4  28F6               	goto	u331
   748     00F5  28F7               	goto	u330
   749     00F6                     u331:
   750     00F6  2918               	goto	l1031
   751     00F7                     u330:
   752     00F7                     l1019:
   753                           
   754                           ;newmain.c: 147: lcd_cmd(0xC0);
   755     00F7  30C0               	movlw	192
   756     00F8  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
   757     00FD                     l1021:
   758                           
   759                           ;newmain.c: 148: lcd_string("Marie OK", 9);
   760     00FD  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   761     00FE  00F5               	movwf	lcd_string@str
   762     00FF  3009               	movlw	9
   763     0100  00F6               	movwf	lcd_string@num
   764     0101  120A  118A  2204  120A  118A  	fcall	_lcd_string
   765     0106                     l1023:
   766                           
   767                           ;newmain.c: 149: marie = 1;
   768     0106  3001               	movlw	1
   769     0107  1283               	bcf	3,5	;RP0=0, select bank0
   770     0108  1303               	bcf	3,6	;RP1=0, select bank0
   771     0109  00AF               	movwf	main@marie
   772     010A                     l1025:
   773                           
   774                           ;newmain.c: 150: RA1 = 0;
   775     010A  1085               	bcf	5,1	;volatile
   776     010B                     l1027:
   777                           
   778                           ;newmain.c: 151: if (timer_count < 500) {
   779     010B  3001               	movlw	1
   780     010C  022D               	subwf	_timer_count+1,w
   781     010D  30F4               	movlw	244
   782     010E  1903               	skipnz
   783     010F  022C               	subwf	_timer_count,w
   784     0110  1803               	skipnc
   785     0111  2913               	goto	u341
   786     0112  2914               	goto	u340
   787     0113                     u341:
   788     0113  2916               	goto	l75
   789     0114                     u340:
   790     0114                     l1029:
   791                           
   792                           ;newmain.c: 152: RA4 = 0;
   793     0114  1205               	bcf	5,4	;volatile
   794                           
   795                           ;newmain.c: 153: }
   796     0115  283E               	goto	l953
   797     0116                     l75:
   798                           
   799                           ;newmain.c: 154: else {;newmain.c: 155: RA4 = 1;
   800     0116  1605               	bsf	5,4	;volatile
   801     0117  283E               	goto	l953
   802     0118                     l1031:
   803     0118  3001               	movlw	1
   804     0119  022B               	subwf	_timer_count1+1,w
   805     011A  30F4               	movlw	244
   806     011B  1903               	skipnz
   807     011C  022A               	subwf	_timer_count1,w
   808     011D  1C03               	skipc
   809     011E  2920               	goto	u351
   810     011F  2921               	goto	u350
   811     0120                     u351:
   812     0120  283E               	goto	l953
   813     0121                     u350:
   814     0121                     l1033:
   815     0121  082F               	movf	main@marie,w
   816     0122  1903               	btfsc	3,2
   817     0123  2925               	goto	u361
   818     0124  2926               	goto	u360
   819     0125                     u361:
   820     0125  283E               	goto	l953
   821     0126                     u360:
   822     0126                     l1035:
   823                           
   824                           ;newmain.c: 158: lcd_cmd(0xC0);
   825     0126  30C0               	movlw	192
   826     0127  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
   827     012C                     l1037:
   828                           
   829                           ;newmain.c: 159: lcd_string("Marie NON", 9);
   830     012C  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   831     012D  00F5               	movwf	lcd_string@str
   832     012E  3009               	movlw	9
   833     012F  00F6               	movwf	lcd_string@num
   834     0130  120A  118A  2204  120A  118A  	fcall	_lcd_string
   835     0135                     l1039:
   836                           
   837                           ;newmain.c: 160: marie = 0;
   838     0135  1283               	bcf	3,5	;RP0=0, select bank0
   839     0136  1303               	bcf	3,6	;RP1=0, select bank0
   840     0137  01AF               	clrf	main@marie
   841     0138                     l1041:
   842                           
   843                           ;newmain.c: 161: RA1 = 1;
   844     0138  1485               	bsf	5,1	;volatile
   845     0139  2916               	goto	l75
   846     013A  120A  118A  280C   	ljmp	start
   847     013D                     __end_of_main:
   848                           
   849                           	psect	text1
   850     0204                     __ptext1:	
   851 ;; *************** function _lcd_string *****************
   852 ;; Defined at:
   853 ;;		line 57 in file "newmain.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  str             1    5[COMMON] PTR const unsigned char 
   856 ;;		 -> STR_6(10), STR_5(9), STR_4(9), STR_3(9), 
   857 ;;		 -> STR_2(8), STR_1(8), 
   858 ;;  num             1    6[COMMON] unsigned char 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  i               1    7[COMMON] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         2       0       0       0       0
   871 ;;      Locals:         1       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         3       0       0       0       0
   874 ;;Total ram usage:        3 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; Hardware stack levels required when called: 2
   877 ;; This function calls:
   878 ;;		_lcd_data
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884     0204                     _lcd_string:	
   885                           ;psect for function _lcd_string
   886                           
   887     0204                     l909:	
   888                           ;incstack = 0
   889                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   890                           
   891                           
   892                           ;newmain.c: 58: unsigned char i;;newmain.c: 59: for (i = 0; i < num; i++) {
   893     0204  01F7               	clrf	lcd_string@i
   894     0205  2A15               	goto	l915
   895     0206                     l911:
   896                           
   897                           ;newmain.c: 60: lcd_data(str[i]);
   898     0206  0877               	movf	lcd_string@i,w
   899     0207  0775               	addwf	lcd_string@str,w
   900     0208  0084               	movwf	4
   901     0209  120A  118A  219F  120A  118A  	fcall	stringdir
   902     020E  120A  118A  213D  120A  118A  	fcall	_lcd_data
   903     0213                     l913:
   904     0213  3001               	movlw	1
   905     0214  07F7               	addwf	lcd_string@i,f
   906     0215                     l915:
   907     0215  0876               	movf	lcd_string@num,w
   908     0216  0277               	subwf	lcd_string@i,w
   909     0217  1C03               	skipc
   910     0218  2A1A               	goto	u211
   911     0219  2A1B               	goto	u210
   912     021A                     u211:
   913     021A  2A06               	goto	l911
   914     021B                     u210:
   915     021B                     l45:
   916     021B  0008               	return
   917     021C                     __end_of_lcd_string:
   918                           
   919                           	psect	text2
   920     013D                     __ptext2:	
   921 ;; *************** function _lcd_data *****************
   922 ;; Defined at:
   923 ;;		line 34 in file "newmain.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  data            1    wreg     unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  data            1    4[COMMON] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         1       0       0       0       0
   939 ;;      Temps:          2       0       0       0       0
   940 ;;      Totals:         3       0       0       0       0
   941 ;;Total ram usage:        3 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_lcd_string
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951     013D                     _lcd_data:	
   952                           ;psect for function _lcd_data
   953                           
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   957                           ;lcd_data@data stored from wreg
   958     013D  00F4               	movwf	lcd_data@data
   959     013E                     l883:
   960                           
   961                           ;newmain.c: 35: PORTB = (data & 0xF0);
   962     013E  0874               	movf	lcd_data@data,w
   963     013F  39F0               	andlw	240
   964     0140  1283               	bcf	3,5	;RP0=0, select bank0
   965     0141  1303               	bcf	3,6	;RP1=0, select bank0
   966     0142  0086               	movwf	6	;volatile
   967     0143                     l885:
   968                           
   969                           ;newmain.c: 36: PORTBbits.RB2 = 1;
   970     0143  1506               	bsf	6,2	;volatile
   971     0144                     l887:
   972                           
   973                           ;newmain.c: 37: PORTBbits.RB1 = 0;
   974     0144  1086               	bcf	6,1	;volatile
   975     0145                     l889:
   976                           
   977                           ;newmain.c: 38: PORTBbits.RB0 = 1;
   978     0145  1406               	bsf	6,0	;volatile
   979     0146                     l891:
   980                           
   981                           ;newmain.c: 39: _delay((unsigned long)((2)*(20000000/4000.0)));
   982     0146  300D               	movlw	13
   983     0147  00F3               	movwf	??_lcd_data+1
   984     0148  30FB               	movlw	251
   985     0149  00F2               	movwf	??_lcd_data
   986     014A                     u397:
   987     014A  0BF2               	decfsz	??_lcd_data,f
   988     014B  294A               	goto	u397
   989     014C  0BF3               	decfsz	??_lcd_data+1,f
   990     014D  294A               	goto	u397
   991     014E  294F               	nop2
   992     014F                     l893:
   993                           
   994                           ;newmain.c: 40: PORTBbits.RB2 = 0;
   995     014F  1283               	bcf	3,5	;RP0=0, select bank0
   996     0150  1303               	bcf	3,6	;RP1=0, select bank0
   997     0151  1106               	bcf	6,2	;volatile
   998     0152                     l895:
   999                           
  1000                           ;newmain.c: 41: PORTB = ((data<<4) & 0xF0);
  1001     0152  0874               	movf	lcd_data@data,w
  1002     0153  00F2               	movwf	??_lcd_data
  1003     0154  3003               	movlw	3
  1004     0155                     u205:
  1005     0155  1003               	clrc
  1006     0156  0DF2               	rlf	??_lcd_data,f
  1007     0157  3EFF               	addlw	-1
  1008     0158  1D03               	skipz
  1009     0159  2955               	goto	u205
  1010     015A  1003               	clrc
  1011     015B  0D72               	rlf	??_lcd_data,w
  1012     015C  39F0               	andlw	240
  1013     015D  0086               	movwf	6	;volatile
  1014     015E                     l897:
  1015                           
  1016                           ;newmain.c: 42: PORTBbits.RB2 = 1;
  1017     015E  1506               	bsf	6,2	;volatile
  1018     015F                     l899:
  1019                           
  1020                           ;newmain.c: 43: PORTBbits.RB1 = 0;
  1021     015F  1086               	bcf	6,1	;volatile
  1022     0160                     l901:
  1023                           
  1024                           ;newmain.c: 44: PORTBbits.RB0 = 1;
  1025     0160  1406               	bsf	6,0	;volatile
  1026     0161                     l903:
  1027                           
  1028                           ;newmain.c: 45: _delay((unsigned long)((2)*(20000000/4000.0)));
  1029     0161  300D               	movlw	13
  1030     0162  00F3               	movwf	??_lcd_data+1
  1031     0163  30FB               	movlw	251
  1032     0164  00F2               	movwf	??_lcd_data
  1033     0165                     u407:
  1034     0165  0BF2               	decfsz	??_lcd_data,f
  1035     0166  2965               	goto	u407
  1036     0167  0BF3               	decfsz	??_lcd_data+1,f
  1037     0168  2965               	goto	u407
  1038     0169  296A               	nop2
  1039     016A                     l905:
  1040                           
  1041                           ;newmain.c: 46: PORTBbits.RB2 = 0;
  1042     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1043     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1044     016C  1106               	bcf	6,2	;volatile
  1045     016D                     l36:
  1046     016D  0008               	return
  1047     016E                     __end_of_lcd_data:
  1048                           
  1049                           	psect	text3
  1050     01C9                     __ptext3:	
  1051 ;; *************** function _lcd_init *****************
  1052 ;; Defined at:
  1053 ;;		line 49 in file "newmain.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, pclath, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0
  1070 ;;      Totals:         0       0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 2
  1074 ;; This function calls:
  1075 ;;		_lcd_cmd
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081     01C9                     _lcd_init:	
  1082                           ;psect for function _lcd_init
  1083                           
  1084     01C9                     l907:	
  1085                           ;incstack = 0
  1086                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1087                           
  1088                           
  1089                           ;newmain.c: 50: lcd_cmd(0x02);
  1090     01C9  3002               	movlw	2
  1091     01CA  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
  1092                           
  1093                           ;newmain.c: 51: lcd_cmd(0x28);
  1094     01CF  3028               	movlw	40
  1095     01D0  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
  1096                           
  1097                           ;newmain.c: 52: lcd_cmd(0x0C);
  1098     01D5  300C               	movlw	12
  1099     01D6  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
  1100                           
  1101                           ;newmain.c: 53: lcd_cmd(0x06);
  1102     01DB  3006               	movlw	6
  1103     01DC  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
  1104                           
  1105                           ;newmain.c: 54: lcd_cmd(0x01);
  1106     01E1  3001               	movlw	1
  1107     01E2  120A  118A  216E  120A  118A  	fcall	_lcd_cmd
  1108     01E7                     l39:
  1109     01E7  0008               	return
  1110     01E8                     __end_of_lcd_init:
  1111                           
  1112                           	psect	text4
  1113     016E                     __ptext4:	
  1114 ;; *************** function _lcd_cmd *****************
  1115 ;; Defined at:
  1116 ;;		line 19 in file "newmain.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  cmd             1    wreg     unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  cmd             1    4[COMMON] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1130 ;;      Params:         0       0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0
  1132 ;;      Temps:          2       0       0       0       0
  1133 ;;      Totals:         3       0       0       0       0
  1134 ;;Total ram usage:        3 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_lcd_init
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145     016E                     _lcd_cmd:	
  1146                           ;psect for function _lcd_cmd
  1147                           
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1151                           ;lcd_cmd@cmd stored from wreg
  1152     016E  00F4               	movwf	lcd_cmd@cmd
  1153     016F                     l859:
  1154                           
  1155                           ;newmain.c: 20: PORTB = (cmd & 0xF0);
  1156     016F  0874               	movf	lcd_cmd@cmd,w
  1157     0170  39F0               	andlw	240
  1158     0171  1283               	bcf	3,5	;RP0=0, select bank0
  1159     0172  1303               	bcf	3,6	;RP1=0, select bank0
  1160     0173  0086               	movwf	6	;volatile
  1161     0174                     l861:
  1162                           
  1163                           ;newmain.c: 21: PORTBbits.RB2 = 1;
  1164     0174  1506               	bsf	6,2	;volatile
  1165     0175                     l863:
  1166                           
  1167                           ;newmain.c: 22: PORTBbits.RB1 = 0;
  1168     0175  1086               	bcf	6,1	;volatile
  1169     0176                     l865:
  1170                           
  1171                           ;newmain.c: 23: PORTBbits.RB0 = 0;
  1172     0176  1006               	bcf	6,0	;volatile
  1173     0177                     l867:
  1174                           
  1175                           ;newmain.c: 24: _delay((unsigned long)((2)*(20000000/4000.0)));
  1176     0177  300D               	movlw	13
  1177     0178  00F3               	movwf	??_lcd_cmd+1
  1178     0179  30FB               	movlw	251
  1179     017A  00F2               	movwf	??_lcd_cmd
  1180     017B                     u417:
  1181     017B  0BF2               	decfsz	??_lcd_cmd,f
  1182     017C  297B               	goto	u417
  1183     017D  0BF3               	decfsz	??_lcd_cmd+1,f
  1184     017E  297B               	goto	u417
  1185     017F  2980               	nop2
  1186     0180                     l869:
  1187                           
  1188                           ;newmain.c: 25: PORTBbits.RB2 = 0;
  1189     0180  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0181  1303               	bcf	3,6	;RP1=0, select bank0
  1191     0182  1106               	bcf	6,2	;volatile
  1192     0183                     l871:
  1193                           
  1194                           ;newmain.c: 26: PORTB = ((cmd<<4) & 0xF0);
  1195     0183  0874               	movf	lcd_cmd@cmd,w
  1196     0184  00F2               	movwf	??_lcd_cmd
  1197     0185  3003               	movlw	3
  1198     0186                     u195:
  1199     0186  1003               	clrc
  1200     0187  0DF2               	rlf	??_lcd_cmd,f
  1201     0188  3EFF               	addlw	-1
  1202     0189  1D03               	skipz
  1203     018A  2986               	goto	u195
  1204     018B  1003               	clrc
  1205     018C  0D72               	rlf	??_lcd_cmd,w
  1206     018D  39F0               	andlw	240
  1207     018E  0086               	movwf	6	;volatile
  1208     018F                     l873:
  1209                           
  1210                           ;newmain.c: 27: PORTBbits.RB2 = 1;
  1211     018F  1506               	bsf	6,2	;volatile
  1212     0190                     l875:
  1213                           
  1214                           ;newmain.c: 28: PORTBbits.RB1 = 0;
  1215     0190  1086               	bcf	6,1	;volatile
  1216     0191                     l877:
  1217                           
  1218                           ;newmain.c: 29: PORTBbits.RB0 = 0;
  1219     0191  1006               	bcf	6,0	;volatile
  1220     0192                     l879:
  1221                           
  1222                           ;newmain.c: 30: _delay((unsigned long)((2)*(20000000/4000.0)));
  1223     0192  300D               	movlw	13
  1224     0193  00F3               	movwf	??_lcd_cmd+1
  1225     0194  30FB               	movlw	251
  1226     0195  00F2               	movwf	??_lcd_cmd
  1227     0196                     u427:
  1228     0196  0BF2               	decfsz	??_lcd_cmd,f
  1229     0197  2996               	goto	u427
  1230     0198  0BF3               	decfsz	??_lcd_cmd+1,f
  1231     0199  2996               	goto	u427
  1232     019A  299B               	nop2
  1233     019B                     l881:
  1234                           
  1235                           ;newmain.c: 31: PORTBbits.RB2 = 0;
  1236     019B  1283               	bcf	3,5	;RP0=0, select bank0
  1237     019C  1303               	bcf	3,6	;RP1=0, select bank0
  1238     019D  1106               	bcf	6,2	;volatile
  1239     019E                     l33:
  1240     019E  0008               	return
  1241     019F                     __end_of_lcd_cmd:
  1242                           
  1243                           	psect	text5
  1244     01E8                     __ptext5:	
  1245 ;; *************** function _timer_0 *****************
  1246 ;; Defined at:
  1247 ;;		line 70 in file "newmain.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          2       0       0       0       0
  1264 ;;      Totals:         2       0       0       0       0
  1265 ;;Total ram usage:        2 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		Interrupt level 1
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274     01E8                     _timer_0:	
  1275                           ;psect for function _timer_0
  1276                           
  1277     01E8                     i1l917:
  1278                           
  1279                           ;newmain.c: 71: if (INTCONbits.TMR0IF == 1) {
  1280     01E8  1D0B               	btfss	11,2	;volatile
  1281     01E9  29EB               	goto	u22_21
  1282     01EA  29EC               	goto	u22_20
  1283     01EB                     u22_21:
  1284     01EB  29FD               	goto	i1l59
  1285     01EC                     u22_20:
  1286     01EC                     i1l919:
  1287                           
  1288                           ;newmain.c: 72: timer_count++;
  1289     01EC  3001               	movlw	1
  1290     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1291     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1292     01EF  07AC               	addwf	_timer_count,f
  1293     01F0  1803               	skipnc
  1294     01F1  0AAD               	incf	_timer_count+1,f
  1295     01F2  3000               	movlw	0
  1296     01F3  07AD               	addwf	_timer_count+1,f
  1297                           
  1298                           ;newmain.c: 73: timer_count1++;
  1299     01F4  3001               	movlw	1
  1300     01F5  07AA               	addwf	_timer_count1,f
  1301     01F6  1803               	skipnc
  1302     01F7  0AAB               	incf	_timer_count1+1,f
  1303     01F8  3000               	movlw	0
  1304     01F9  07AB               	addwf	_timer_count1+1,f
  1305     01FA                     i1l921:
  1306                           
  1307                           ;newmain.c: 74: INTCONbits.TMR0IF = 0;
  1308     01FA  110B               	bcf	11,2	;volatile
  1309     01FB                     i1l923:
  1310                           
  1311                           ;newmain.c: 75: TMR0 = 59;
  1312     01FB  303B               	movlw	59
  1313     01FC  0081               	movwf	1	;volatile
  1314     01FD                     i1l59:
  1315     01FD  0871               	movf	??_timer_0+1,w
  1316     01FE  008A               	movwf	10
  1317     01FF  0E70               	swapf	??_timer_0,w
  1318     0200  0083               	movwf	3
  1319     0201  0EFE               	swapf	btemp,f
  1320     0202  0E7E               	swapf	btemp,w
  1321     0203  0009               	retfie
  1322     0204                     __end_of_timer_0:
  1323     0002                     ___latbits      equ	2
  1324     007E                     btemp           set	126	;btemp
  1325     007E                     wtemp0          set	126
  1326                           
  1327                           	psect	intentry
  1328     0004                     __pintentry:	
  1329                           ;incstack = 0
  1330                           ; Regs used in _timer_0: [wreg]
  1331                           
  1332     0004                     interrupt_function:
  1333     007E                     saved_w         set	btemp
  1334     0004  00FE               	movwf	btemp
  1335     0005  0E03               	swapf	3,w
  1336     0006  00F0               	movwf	??_timer_0
  1337     0007  080A               	movf	10,w
  1338     0008  00F1               	movwf	??_timer_0+1
  1339     0009  120A  118A  29E8   	ljmp	_timer_0
  1340                           
  1341                           	psect	config
  1342                           
  1343                           ;Config register CONFIG @ 0x2007
  1344                           ;	Oscillator Selection bits
  1345                           ;	FOSC = EXTRC, RC oscillator
  1346                           ;	Watchdog Timer Enable bit
  1347                           ;	WDTE = OFF, WDT disabled
  1348                           ;	Power-up Timer Enable bit
  1349                           ;	PWRTE = OFF, PWRT disabled
  1350                           ;	Brown-out Reset Enable bit
  1351                           ;	BOREN = OFF, BOR disabled
  1352                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1353                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1354                           ;	Data EEPROM Memory Code Protection bit
  1355                           ;	CPD = OFF, Data EEPROM code protection off
  1356                           ;	Flash Program Memory Write Enable bits
  1357                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1358                           ;	In-Circuit Debugger Mode bit
  1359                           ;	DEBUG = 0x1, unprogrammed default
  1360                           ;	Flash Program Memory Code Protection bit
  1361                           ;	CP = OFF, Code protection off
  1362     2007                     	org	8199
  1363     2007  3FBB               	dw	16315

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      2      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[8]), STR_2(CODE[8]), STR_3(CODE[9]), STR_4(CODE[9]), 
		 -> STR_5(CODE[9]), STR_6(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_init->_lcd_cmd

Critical Paths under _timer_0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     372
                                              8 COMMON     3     3      0
                                              0 BANK0      2     2      0
                            _lcd_cmd
                           _lcd_init
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     1      2     160
                                              5 COMMON     3     1      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      58
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      58
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      58
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _timer_0                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_data

 _timer_0 (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     11      11     78.6%
BANK0               80      2      16     20.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      27      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Nov 03 17:30:59 2024

                      pc 0002             lcd_data@data 0074                       l33 019E  
                     l36 016D                       l45 021B                       l39 01E7  
                     l75 0116                       l68 0098                       fsr 0004  
                    l901 0160                      l903 0161                      l911 0206  
                    l905 016A                      l913 0213                      l907 01C9  
                    l915 0215                      l931 0029                      l861 0174  
                    l909 0204                      l941 002E                      l933 002A  
                    l925 0023                      l871 0183                      l863 0175  
                    l951 003D                      l943 002F                      l935 002B  
                    l927 0027                      l881 019B                      l873 018F  
                    l865 0176                      l961 0058                      l953 003E  
                    l945 0031                      l937 002C                      l929 0028  
                    l875 0190                      l867 0177                      l859 016F  
                    l891 0146                      l883 013E                      l971 0074  
                    l963 005E                      l955 0042                      l947 0035  
                    l939 002D                      l877 0191                      l869 0180  
                    l893 014F                      l885 0143                      l981 008D  
                    l973 0079                      l965 0067                      l957 004F  
                    l949 003A                      l879 0192                      l895 0152  
                    l887 0144                      l991 00AE                      l983 0096  
                    l975 007F                      l967 006A                      l959 0055  
                    l897 015E                      l889 0145                      l993 00B7  
                    l977 0088                      l985 009A                      l969 006B  
                    l899 015F                      l995 00BA                      l987 00A3  
                    l979 008C                      l989 00A8                      l999 00BC  
                    _RA0 0028                      _RA1 0029                      _RC0 0038  
                    _RA4 002C                      _RC1 0039                      u210 021B  
                    u211 021A                      u300 00C0                      u205 0155  
                    u301 00BF                      u310 00D3                      u230 0042  
                    u311 00D2                      u231 0041                      u320 00F2  
                    u240 0055                      u321 00F1                      u241 0054  
                    u330 00F7                      u250 0074                      u331 00F6  
                    u251 0073                      u340 0114                      u260 0079  
                    u341 0113                      u261 0078                      u350 0121  
                    u270 0096                      u407 0165                      u351 0120  
                    u271 0095                      u360 0126                      u280 00A3  
                    u417 017B                      u361 0125                      u281 00A2  
                    u290 00A8                      u427 0196                      u195 0186  
                    u291 00A7                      u377 0048                      u387 00C6  
                    u397 014A                      fsr0 0004                     l1001 00C0  
                   l1011 00E5                     l1003 00CD                     l1021 00FD  
                   l1013 00E8                     l1005 00D3                     l1023 0106  
                   l1031 0118                     l1007 00D6                     l1015 00E9  
                   l1041 0138                     l1033 0121                     l1025 010A  
                   l1017 00F2                     l1009 00DC                     l1035 0126  
                   l1027 010B                     l1019 00F7                     l1037 012C  
                   l1029 0114                     l1039 0135                     STR_1 01C1  
                   STR_2 01C1                     STR_3 01B8                     STR_4 01AF  
                   STR_5 01AF                     STR_6 01A5                     i1l59 01FD  
                   _TMR0 0001                     _main 0023                     btemp 007E  
                   start 000C              lcd_string@i 0077                    ?_main 0070  
                  i1l921 01FA                    i1l923 01FB                    i1l917 01E8  
                  i1l919 01EC                    u22_20 01EC                    u22_21 01EB  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
        __end_of_lcd_cmd 019F                    pclath 000A          __end_of_timer_0 0204  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 013D                   ??_main 0078         __end_of_lcd_data 016E  
       __end_of_lcd_init 01E8                ??_lcd_cmd 0072                   saved_w 007E  
              ??_timer_0 0070            lcd_string@num 0076            lcd_string@str 0075  
__end_of__initialization 001F           __pcstackCOMMON 0070               __pbssBANK0 0020  
             __pmaintext 0023               __pintentry 0004                ?_lcd_data 0070  
             _lcd_string 0204                ?_lcd_init 0070               __stringtab 019F  
                __ptext1 0204                  __ptext2 013D                  __ptext3 01C9  
                __ptext4 016E                  __ptext5 01E8                  _lcd_cmd 016E  
                _timer_0 01E8               ??_lcd_data 0072               ??_lcd_init 0075  
   end_of_initialization 001F                _PORTBbits 0006                _TRISAbits 0085  
              _TRISCbits 0087               lcd_cmd@cmd 0074              ?_lcd_string 0075  
    start_initialization 000F             _countString2 0020                ___latbits 0002  
          __pcstackBANK0 002E                __pstrings 019F                 ?_lcd_cmd 0070  
               ?_timer_0 0070        interrupt_function 0004              __stringbase 01A4  
              main@marie 002F             ??_lcd_string 0077              _countString 0025  
     __end_of_lcd_string 021C       __end_of__stringtab 01A5                 _lcd_data 013D  
               _lcd_init 01C9                 main@jose 002E               _INTCONbits 000B  
               intlevel1 0000                stringcode 019F             _timer_count1 002A  
             _OPTION_REG 0081                 stringdir 019F                 stringtab 019F  
            _timer_count 002C  
